// Code generated by github.com/nightmarlin/pokeapi/cmd/gettergen@v0"; DO NOT EDIT.

package pokeapi

import "context"

const MachineResource Resource = "machine"

// GetMachine only accepts the ID of the desired Machine.
func (c *Client) GetMachine(ctx context.Context, id string) (*Machine, error) {
	return do[*Machine](ctx, c, c.getURL(MachineResource, id), nil)
}
func (c *Client) ListMachines(ctx context.Context, opts *ListOptions) (*Page[APIResource[Machine], Machine], error) {
	return do[*Page[APIResource[Machine], Machine]](ctx, c, c.listURL(MachineResource), opts.urlValues())
}

const MoveResource Resource = "move"

func (c *Client) GetMove(ctx context.Context, ident string) (*Move, error) {
	return do[*Move](ctx, c, c.getURL(MoveResource, ident), nil)
}
func (c *Client) ListMoves(ctx context.Context, opts *ListOptions) (*Page[NamedAPIResource[Move], Move], error) {
	return do[*Page[NamedAPIResource[Move], Move]](ctx, c, c.listURL(MoveResource), opts.urlValues())
}

const MoveAilmentResource Resource = "move-ailment"

func (c *Client) GetMoveAilment(ctx context.Context, ident string) (*MoveAilment, error) {
	return do[*MoveAilment](ctx, c, c.getURL(MoveAilmentResource, ident), nil)
}
func (c *Client) ListMoveAilments(ctx context.Context, opts *ListOptions) (*Page[NamedAPIResource[MoveAilment], MoveAilment], error) {
	return do[*Page[NamedAPIResource[MoveAilment], MoveAilment]](ctx, c, c.listURL(MoveAilmentResource), opts.urlValues())
}

const MoveBattleStyleResource Resource = "move-battle-style"

func (c *Client) GetMoveBattleStyle(ctx context.Context, ident string) (*MoveBattleStyle, error) {
	return do[*MoveBattleStyle](ctx, c, c.getURL(MoveBattleStyleResource, ident), nil)
}
func (c *Client) ListMoveBattleStyles(ctx context.Context, opts *ListOptions) (*Page[NamedAPIResource[MoveBattleStyle], MoveBattleStyle], error) {
	return do[*Page[NamedAPIResource[MoveBattleStyle], MoveBattleStyle]](ctx, c, c.listURL(MoveBattleStyleResource), opts.urlValues())
}

const MoveCategoryResource Resource = "move-category"

func (c *Client) GetMoveCategory(ctx context.Context, ident string) (*MoveCategory, error) {
	return do[*MoveCategory](ctx, c, c.getURL(MoveCategoryResource, ident), nil)
}
func (c *Client) ListMoveCategories(ctx context.Context, opts *ListOptions) (*Page[NamedAPIResource[MoveCategory], MoveCategory], error) {
	return do[*Page[NamedAPIResource[MoveCategory], MoveCategory]](ctx, c, c.listURL(MoveCategoryResource), opts.urlValues())
}

const MoveDamageClassResource Resource = "move-damage-class"

func (c *Client) GetMoveDamageClass(ctx context.Context, ident string) (*MoveDamageClass, error) {
	return do[*MoveDamageClass](ctx, c, c.getURL(MoveDamageClassResource, ident), nil)
}
func (c *Client) ListMoveDamageClasses(ctx context.Context, opts *ListOptions) (*Page[NamedAPIResource[MoveDamageClass], MoveDamageClass], error) {
	return do[*Page[NamedAPIResource[MoveDamageClass], MoveDamageClass]](ctx, c, c.listURL(MoveDamageClassResource), opts.urlValues())
}

const MoveLearnMethodResource Resource = "move-learn-method"

func (c *Client) GetMoveLearnMethod(ctx context.Context, ident string) (*MoveLearnMethod, error) {
	return do[*MoveLearnMethod](ctx, c, c.getURL(MoveLearnMethodResource, ident), nil)
}
func (c *Client) ListMoveLearnMethods(ctx context.Context, opts *ListOptions) (*Page[NamedAPIResource[MoveLearnMethod], MoveLearnMethod], error) {
	return do[*Page[NamedAPIResource[MoveLearnMethod], MoveLearnMethod]](ctx, c, c.listURL(MoveLearnMethodResource), opts.urlValues())
}

const MoveTargetResource Resource = "move-target"

func (c *Client) GetMoveTarget(ctx context.Context, ident string) (*MoveTarget, error) {
	return do[*MoveTarget](ctx, c, c.getURL(MoveTargetResource, ident), nil)
}
func (c *Client) ListMoveTargets(ctx context.Context, opts *ListOptions) (*Page[NamedAPIResource[MoveTarget], MoveTarget], error) {
	return do[*Page[NamedAPIResource[MoveTarget], MoveTarget]](ctx, c, c.listURL(MoveTargetResource), opts.urlValues())
}
